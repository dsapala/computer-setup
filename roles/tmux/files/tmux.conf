# ex: ts=2 sw=2 et filetype=tmux

run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
run-shell 'tmux setenv -g TMUX_OS_FAMILY $(uname)'

if-shell -b '[ "$TMUX_OS_FAMILY" == "Darwin" ] && [ "$(which -s reattach-to-user-namespace; echo $?)" -eq "0" ]' " \
  set -g default-command 'reattach-to-user-namespace $SHELL -l'; \
"

if-shell -b '[ "$TMUX_OS_FAMILY" == "Darwin" ] && [ "$(which -s reattach-to-user-namespace; echo $?)" -eq "0" ] && [ "$(echo "$TMUX_VERSION < 2.4" | bc)" -eq "1" ]' " \
  bind-key -t vi-copy v begin-selection; \
  bind-key -t vi-copy y copy-pipe 'reattach-to-user-namespace pbcopy'; \
  unbind -t vi-copy Enter; \
  bind-key -t vi-copy Enter copy-pipe 'reattach-to-user-namespace pbcopy'; \
"

if-shell -b '[ "$TMUX_OS_FAMILY" == "Linux" ] && [ "$(echo "$TMUX_VERSION < 2.4" | bc)" -eq "1" ]' " \
  bind-key -t vi-copy v begin-selection; \
  bind-key -t vi-copy y copy-selection; \
  bind-key -t vi-copy r rectangle-toggle; \
"

if-shell -b '[ "$TMUX_OS_FAMILY" == "Darwin" ] && [ "$(which -s reattach-to-user-namespace; echo $?)" -eq "0" ] && [ "$(echo "$TMUX_VERSION >= 2.4" | bc)" -eq "1" ]' " \
  bind-key -T copy-mode-vi v send-keys -X begin-selection; \
  bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'; \
  unbind-key -T copy-mode-vi Enter; \
  bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'; \
"

if-shell -b '[ "$TMUX_OS_FAMILY" == "Linux" ] && [ "$(echo "$TMUX_VERSION >= 2.4" | bc)" -eq "1" ]' " \
  bind-key -T copy-mode-vi v send-keys -X begin-selection; \
  bind-key -T copy-mode-vi y send-keys -X copy-selection; \
  bind-key -T copy-mode-vi r send-keys -X rectangle-toggle; \
"

# Setting the prefix from C-b to C-a
set -g prefix C-a
# Free the original Ctrl-b prefix keybinding
unbind C-b
# order sessions by name in the chooser
bind s choose-tree -sZ -O name
# setting the delay between prefix and command
# set -sg escape-time 1
set -sg escape-time 200
# set repeat time
set -sg repeat-time 200
# set-option repeat-time 100
# Ensure that we can send Ctrl-A to other apps
bind C-a send-prefix
# Set the base index for windows to 1 instead of 0
set -g base-index 1
# Set the base index for panes to 1 instead of 0
setw -g pane-base-index 1
# increase scrollback buffer history size/length
set -g history-limit 500000
# Reload the file with Prefix r
bind r source-file ~/.tmux.conf \; display "reloaded!"
# backslash to switch to last session
bind -r \\ switch-client -l
# splitting panes
bind | split-window -h
bind - split-window -v
# moving between panes
bind -r C-h select-pane -L
bind -r C-j select-pane -D
bind -r C-k select-pane -U
bind -r C-l select-pane -R
# Pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
# bind switch client -l
# bind L switch-client -l
# bind key for synchronizing panes
bind-key y set-window-option synchronize-panes \; display "toggled synchronize-pages #{?pane_synchronized,on,off}"
# Quick window selection
# found it to switch when using vim ctrl movements vim which was annoying
#bind -r C-i select-window -t :-
#bind -r C-o select-window -t :+
# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"
# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on
# set the status line's colors
set -g status-fg white
# set -g status-bg black
set -g status-bg colour237
# set the color of the window list
# setw -g window-status-fg cyan
# setw -g window-status-fg black

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc -l)" -eq "1" ]' " \
  setw -g window-status-fg colour237; \
  setw -g window-status-bg default; \
  setw -g window-status-attr dim; \
  setw -g window-status-current-fg '#86d4fc'; \
  setw -g window-status-current-bg colour237; \
  setw -g window-status-current-attr bright; \
  set -g pane-border-fg white; \
  set -g pane-border-bg colour12; \
  set -g pane-active-border-fg white; \
  set -g pane-active-border-bg colour12; \
  set -g message-fg white; \
  set -g message-bg black; \
  set -g message-attr bright; \
"

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc -l)" -eq "1" ]' " \
  set -g window-status-style fg='#86d4fc',bg=colour237,bright; \
  set -g window-status-activity-style fg=white,bg=colour237,dim; \
  set -g window-status-bell-style fg=white,bg=colour237,dim; \
  set -g window-status-current-style fg='#86d4fc',bg=colour237,bright; \
  set -g pane-border-style fg=white,bg=colour12; \
  set -g pane-active-border-style fg=white,bg=colour12; \
  set -g message-style fg=white,bg=black,bright; \
"

# Status line left side
set -g status-left-length 40
# set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I.#[fg=cyan]#P"
#set -g status-left "#[fg=#86d4fc]session: #S #[fg=white]#I.#[fg=white]#P"
set -g status-left "#[fg=#86d4fc]#S #[fg=white]#I.#[fg=white]#P"
# set -g status-utf8 on
# Status line right side
# 15% | 28 Nov 18:15
# set -g status-right "#[fg=cyan]%b %d %R"
# set -g status-right "#[fg=#86d4fc]%b %d %R"
set -g status-right "[continuum: #{continuum_status}] #[fg=#86d4fc]%b %d %R"
# Update the status bar every sixty seconds
# set -g status-interval 60
# Center the window list
set -g status-justify centre
# enable vi keys.
setw -g mode-keys vi
# Open panes in the same directory using the tmux-panes script
unbind v
unbind h
bind v send-keys " ~/tmux-panes -h" C-m
bind h send-keys " ~/tmux-panes -v" C-m
# Maximize and restore a pane
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp
# Log output to a text file on demand
bind P pipe-pane -o "cat >>~/#W.log" \; display "toggled logging to ~/#W.log"
# vi copy paste
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind k clear-history \; display "cleared!"

# set default directory for new windows in this session to current directory
bind M-c attach-session -c "#{pane_current_path}"

# open a new window in the current directory
bind C new-window -c "#{pane_current_path}"

# passthrough color escape sequences
set -g allow-passthrough on

# bind g send-keys -t 1.2 "clear && make && <RUN A THING>" C-M

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'tmux-plugins/tmux-resurrect'

set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-save-interval '1'
set -g @continuum-restore 'on'
set -g @continuum-boot-options 'iterm'

set -g @plugin 'tinted-theming/tinted-tmux'
set -g @tinted-color 'base16-tomorrow-night'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

